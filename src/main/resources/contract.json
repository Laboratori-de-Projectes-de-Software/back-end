{
  "openapi": "3.0.3",
  "info": {
    "title": "Juamesitos-Lab_Proj",
    "summary": "User info service",
    "description": "",
    "termsOfService": "",
    "contact": {
      "name": "API Support",
      "url": "https://www.example.com/support",
      "email": "carlos.galvez1@uib.estudiant.cat"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "url de l'api de desenvolupament",
      "description": "Development server"
    },
    {
      "url": "url de l'api en producci√≥",
      "description": "Production server"
    }
  ],
  "components": {
    "schemas": {
      "Bot": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "model": { "type": "string" },
          "registrationDate": { "type": "string" },
          "url": { "type": "string" },
          "access_credentials": {
            "type": "object",
            "properties": {
              "username": { "type": "string" },
              "password": { "type": "string" }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" }
        }
      },
      "League": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "creation_date": { "type": "string", "format": "date-time" },
          "state": { "type": "string" },
          "admin": { "type": "integer", "format": "int64" }
        }
      },
      "Classification": {
        "type": "object",
        "properties": {
          "id_league": { "type": "integer", "format": "int64" },
          "id_bot": { "type": "integer", "format": "int64" },
          "points": { "type": "integer", "format": "int64" },
          "matches": { "type": "integer", "format": "int64" },
          "wins": { "type": "integer", "format": "int64" },
          "losses": { "type": "integer", "format": "int64" },
          "draws": { "type": "integer", "format": "int64" },
          "timestamp": { "type": "string", "format": "date-time" }
        }
      },
      "Confrontation": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "idLeague": { "type": "string" },
          "idVisitant": { "type": "string" },
          "idLocal": { "type": "string" },
          "date": { "type": "string", "format": "date-time" },
          "result": {
            "type": "string",
            "enum": ["local", "visitant", "draw"]
          }
        }
      },
      "Answer": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "argument": { "type": "string" },
          "author": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" }
        }
      }
    },
    "parametres": {
      "UserId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid input data"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/user": {
      "post": {
        "summary": "Create a new Bot",
        "description": "Endpoint to create a new bot in the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bot"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bot successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bot"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "Get user by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  }
}

