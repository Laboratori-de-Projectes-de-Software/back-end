openapi: 3.0.4
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

paths:
  /api/v0/auth/register:
    post:
      summary: Sends information to create a new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTORegister"
        required: true
      responses:
        "200":
          description: User created correctly
        "409":
          description: User not created because an user with this username or email already exists
        "500":
          description: There has been a problem with the server
  /api/v0/auth/login:
    post:
      summary: Sends information to log in.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTOLogin"
        required: true
      responses:
        "200":
          description: User logged in correctly
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTOResponse"
        "401":
          description: Log in unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "501":
          description: There has been a problem with the server
  /api/v0/bot:
    post:
      summary: Sends information to create a bot.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotDTORequest"
        required: true
      responses:
        "201":
          description: Bot created
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/BotDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "409":
          description: Bot with this data already exists
        "500":
          description: There has been a problem with the server
    get:
      summary: Get all bots from a specific user
      parameters:
        - in: query
          name: owner
          required: false
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        "200":
          description: Returns a list of all bots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BotSummaryDTOResponse"
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/bot/{botId}:
    get:
      summary: Get information of a specific bot
      parameters:
        - in: path
          name: botId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The bot ID
      responses:
        "200":
          description: Returns a bot
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/BotDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
    put:
      summary: Update a bot
      parameters:
        - in: path
          name: botId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The bot ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotDTORequest"
        required: true
      responses:
        "200":
          description: Returns a bot
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BotDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/league:
    post:
      summary: Create league
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeagueDTORequest"
        required: true
      responses:
        "201":
          description: League created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeagueDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "409":
          description: League with this data already exists
        "500":
          description: There has been a problem with the server
    get:
      summary: Get a list of leagues
      parameters:
        - in: query
          name: owner
          required: false
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        "200":
          description: Returns a list of leagues
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LeagueDTOResponse"
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/league/{leagueId}:
    get:
      summary: Get information about a certain league
      parameters:
        - in: path
          name: leagueId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The league ID
      responses:
        "200":
          description: Return information about a league
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeagueDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
    put:
      summary: Update information about a certain league
      parameters:
        - in: path
          name: leagueId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The league ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeagueDTORequest"
        required: true
      responses:
        "200":
          description: League updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeagueDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
    delete:
      summary: Delete a league
      parameters:
        - in: path
          name: leagueId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The league ID
      responses:
        "200":
          description: League deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeagueDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/league/{leagueId}/bot:
    post:
      summary: Register bot to league
      parameters:
        - in: path
          name: leagueId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The league ID
      requestBody:
        content:
          application/json:
            schema:
              type: integer
        required: true
      responses:
        "201":
          description: Bot added to league
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/league/{leagueId}/leaderboard:
    get:
      summary: Get leaderboard scoring
      parameters:
        - in: path
          name: leagueId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The league ID
      responses:
        "201":
          description: Bot added to league
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ParticipationDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/league/{leagueId}/start:
    post:
      parameters:
        - in: path
          name: leagueId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The league ID
      responses:
        "201":
          description: League started
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/league/{leagueId}/match:
    get:
      parameters:
        - in: path
          name: leagueId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The league ID
      responses:
        "200":
          description: Match found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MatchDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
  /api/v0/match/{matchId}/message:
    get:
      parameters:
        - in: path
          name: matchId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The match ID
      responses:
        "200":
          description: Messages found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MessageDTOResponse"
        "400":
          description: Bad request
        "401":
          description: Action unauthorized
        "404":
          description: Not found
        "408":
          description: Request timeout
        "500":
          description: There has been a problem with the server
components:
  schemas:
    UserDTORegister:
      properties:
        user:
          type: string
        email:
          type: string
          pattern: "[a-z]+@[a-z.]+"
        password:
          type: string
      required:
        - user
        - email
        - password
    UserDTOLogin:
      properties:
        user:
          type: string
        email:
          type: string
          pattern: "[a-z]+@[a-z.]+"
      required:
        - user
        - email
    UserDTOResponse:
      properties:
        token:
          type: string
        expiresIn:
          type: integer
        user:
          type: string
        userId:
          type: integer
      required:
        - token
        - expiresIn
        - user
        - userId
    BotDTORequest:
      properties:
        name:
          type: string
        description:
          type: string
        urlImagen:
          type: string
        endpoint:
          type: string
        userId:
          type: integer
      required:
        - name
        - description
        - urlImagen
        - endpoint
        - userId
    BotDTOResponse:
      properties:
        botId:
          type: integer
        name:
          type: string
        description:
          type: string
        urlImagen:
          type: string
        nWins:
          type: integer
        nLoses:
          type: integer
        nDraws:
          type: integer
      required:
        - botId
        - name
        - description
        - urlImagen
        - nWins
        - nDraws
        - nLoses
    BotSummaryDTOResponse:
      properties:
        name:
          type: string
        id:
          type: number
        cualidad:
          type: string
      required:
        - name
        - description
        - urlImagen
        - endpoint
    LeagueDTORequest:
      properties:
        name:
          type: string
        urlImagen:
          type: string
        rounds:
          type: integer
        matchTime:
          type: integer
          format: int64
        bots:
          type: array
          items:
            type: integer
        userId:
          type: integer
      required:
        - name
        - urlImagen
        - rounds
        - matchTime
        - bots
        - userId
    LeagueDTOResponse:
      properties:
        leagueId:
          type: integer
        name:
          type: string
        urlImagen:
          type: string
        user:
          type: string
        rounds:
          type: integer
        matchTime:
          type: integer
          format: int64
        bots:
          type: array
          items:
            type: integer
      required:
        - leagueId
        - name
        - urlImagen
        - user
        - rounds
        - matchTime
        - bots
    MatchDTOResponse:
      properties:
        state:
          type: string
        result:
          type: integer
        fighters:
          type: array
          items:
            type: string
        roundNumber:
          type: integer
      required:
        - state
        - result
        - fighters
        - roundNumber
    MessageDTOResponse:
      properties:
        text:
          type: string
        botId:
          type: integer
        time:
          type: string
      required:
        - text
        - botId
        - time
    ParticipationDTOResponse:
      properties:
        botId:
          type: integer
        name:
          type: string
        points:
          type: integer
        position:
          type: integer
      required:
        - botId
        - name
        - points
        - position



  
